[{"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\index.js":"1","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\App.js":"2","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\reportWebVitals.js":"3","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\app\\store.js":"4","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Footer.js":"5","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Tools.js":"6","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Boxers.js":"7","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\AddBoxer.js":"8","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Header.js":"9","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\ViewBoxer.js":"10","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\searchBoxerSlice.js":"11","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\selectBoxerSlice.js":"12","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\addBoxerSlice.js":"13","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\InputBar.js":"14","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\addBoxerCard.js":"15","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\BoxerCard.js":"16"},{"size":749,"mtime":1663459597532,"results":"17","hashOfConfig":"18"},{"size":1262,"mtime":1664405775916,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1663457277962,"results":"20","hashOfConfig":"18"},{"size":400,"mtime":1663810220983,"results":"21","hashOfConfig":"18"},{"size":268,"mtime":1663723330762,"results":"22","hashOfConfig":"18"},{"size":1194,"mtime":1663799212618,"results":"23","hashOfConfig":"18"},{"size":2259,"mtime":1664133454274,"results":"24","hashOfConfig":"18"},{"size":5863,"mtime":1664059943898,"results":"25","hashOfConfig":"18"},{"size":548,"mtime":1663460309442,"results":"26","hashOfConfig":"18"},{"size":3576,"mtime":1664152229112,"results":"27","hashOfConfig":"18"},{"size":495,"mtime":1663725371954,"results":"28","hashOfConfig":"18"},{"size":1760,"mtime":1664135849228,"results":"29","hashOfConfig":"18"},{"size":553,"mtime":1663810959975,"results":"30","hashOfConfig":"18"},{"size":1548,"mtime":1664152264617,"results":"31","hashOfConfig":"18"},{"size":2686,"mtime":1664408047559,"results":"32","hashOfConfig":"18"},{"size":1010,"mtime":1663813997680,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1clidjl",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\index.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\App.js",["86"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Boxers from \"./components/Boxers\";\nimport Header from \"./components/Header\";\nimport Tools from \"./components/Tools\";\nimport AddBoxer from \"./components/AddBoxer\";\nimport { closeNewBoxer, selectAddBoxer } from \"./features/addBoxerSlice\";\nimport Footer from \"./components/Footer\";\nimport ViewBoxer from \"./components/ViewBoxer\";\nimport {\n  deselectViewBoxer,\n  selectToViewBoxer,\n} from \"./features/selectBoxerSlice\";\n\nfunction App() {\n  const addNewBoxerOpen = useSelector(selectAddBoxer);\n  const selectToViewBoxerOpen = useSelector(selectToViewBoxer);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__home\" style={{ opacity: addNewBoxerOpen && \"0.2\" }}>\n        <Header />\n        <div className=\"app__body\">\n          <Tools />\n          <Boxers />\n          <Footer />\n        </div>\n      </div>\n\n      <AddBoxer\n        backdrop=\"static\"\n        show={addNewBoxerOpen}\n        onHide={() => dispatch(closeNewBoxer())}\n      />\n\n      <ViewBoxer\n        show={selectToViewBoxerOpen}\n        onHide={() => dispatch(deselectViewBoxer())}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\reportWebVitals.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\app\\store.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Footer.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Tools.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Boxers.js",["87"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAddBoxer } from \"../features/addBoxerSlice\";\r\nimport { selectSearchBoxer } from \"../features/searchBoxerSlice\";\r\nimport { selectViewBoxer } from \"../features/selectBoxerSlice\";\r\nimport BoxerCard from \"./BoxerCard\";\r\nimport \"./Boxers.css\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction Boxers() {\r\n  const [boxers, setBoxers] = useState([]);\r\n  const addNewBoxerOpen = useSelector(selectAddBoxer);\r\n  const searchAllBoxersOpen = useSelector(selectSearchBoxer);\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function getBoxers() {\r\n      const response = await fetch(\"http://localhost:5000/record/\");\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n      const boxers = await response.json();\r\n      setBoxers(boxers);\r\n    }\r\n    getBoxers();\r\n    return;\r\n  }, [addNewBoxerOpen]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        `http://localhost:5000/record/${searchAllBoxersOpen.toString()}`\r\n      );\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n      const boxersResponse = await response.json();\r\n      if (boxersResponse) {\r\n        setBoxers(boxersResponse);\r\n      }\r\n    }\r\n    fetchData();\r\n    return;\r\n  }, [searchAllBoxersOpen]);\r\n\r\n  const CardClicked = (event, name) => {\r\n    dispatch(selectViewBoxer(name));\r\n  };\r\n\r\n  return (\r\n    <div className=\"boxers__container\">\r\n      {boxers.map((boxer, index) => {\r\n        return (\r\n          <BoxerCard\r\n            key={index}\r\n            id={boxer._id}\r\n            name={boxer.name}\r\n            image={require(`../images/${boxer.primaryImageName}`)}\r\n            record={`${boxer.wins}-${boxer.losses}-${boxer.draws}`}\r\n            yearsActive={`${boxer.debut}-${boxer.retire}`}\r\n            onClick={(event) => CardClicked(event, boxer)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Boxers;\r\n","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\AddBoxer.js",["88"],[],"import React, { useRef, useState } from \"react\";\r\nimport \"./AddBoxer.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport AddBoxerCard from \"./addBoxerCard\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { closeNewBoxer } from \"../features/addBoxerSlice\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction AddBoxer(props) {\r\n  const dispatch = useDispatch();\r\n  const backgroundInputFile = useRef(null);\r\n  const primaryInputFile = useRef(null);\r\n  const [backgroundImageFile, setBackgroundImageFile] = useState(\r\n    require(\"../images/defaultBackground.png\")\r\n  );\r\n  const [backgroundImageName, setBackgroundImageName] = useState(\"\");\r\n  const [primaryImageFile, setPrimaryImageFile] = useState(\r\n    require(\"../images/default.jpg\")\r\n  );\r\n  const [primaryImageName, setPrimaryImageName] = useState(\"\");\r\n  const [name, setName] = useState(\"Name\");\r\n  const [debut, setDebut] = useState(\"0000\");\r\n  const [retire, setRetire] = useState(\"9999\");\r\n  const [wins, setWins] = useState(\"0\");\r\n  const [losses, setLosses] = useState(\"0\");\r\n  const [draws, setDraws] = useState(\"0\");\r\n  const [info, setInfo] = useState(\"\");\r\n\r\n    const resetValues = () => {\r\n      setBackgroundImageFile(require(\"../images/defaultBackground.png\"))\r\n      setBackgroundImageName(\"\")\r\n      setPrimaryImageFile(require(\"../images/default.jpg\"))\r\n      setPrimaryImageName(\"\")\r\n      setName(\"Name\")\r\n      setDebut(\"0000\")\r\n      setRetire(\"9999\")\r\n      setWins(\"0\")\r\n      setLosses(\"0\")\r\n      setDraws(\"0\")\r\n    }\r\n\r\n  async function handleSubmit(e) {\r\n    const newBoxer = {\r\n      name: name,\r\n      debut: debut,\r\n      retire: retire,\r\n      wins: wins,\r\n      losses: losses,\r\n      draws: draws,\r\n      primaryImageName: primaryImageName,\r\n      backgroundImageName: backgroundImageName,\r\n      info: info,\r\n    };\r\n    await fetch(\"http://localhost:5000/record/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newBoxer),\r\n    }).catch((error) => {\r\n      window.alert(error);\r\n      return;\r\n    });\r\n    dispatch(closeNewBoxer());\r\n    resetValues()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    dispatch(closeNewBoxer());\r\n    resetValues();\r\n  }\r\n\r\n  const onBackgroundButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    backgroundInputFile.current.click();\r\n  };\r\n\r\n  const onPrimaryButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    primaryInputFile.current.click();\r\n  };\r\n\r\n  const handleBackgroundPhotoClick = (event) => {\r\n    setBackgroundImageFile(require(`../images/${event.target.files[0].name}`));\r\n    setBackgroundImageName(event.target.files[0].name);\r\n  };\r\n\r\n  const handlePrimaryPhotoClick = (event) => {\r\n    setPrimaryImageFile(require(`../images/${event.target.files[0].name}`));\r\n    setPrimaryImageName(event.target.files[0].name);\r\n  };\r\n\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleDebut = (event) => {\r\n    setDebut(event.target.value);\r\n  };\r\n\r\n  const handleRetire = (event) => {\r\n    setRetire(event.target.value);\r\n  };\r\n\r\n  const handleWins = (event) => {\r\n    setWins(event.target.value);\r\n  };\r\n\r\n  const handleLosses = (event) => {\r\n    setLosses(event.target.value);\r\n  };\r\n\r\n  const handleDraws = (event) => {\r\n    setDraws(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addBoxerModal__container\">\r\n      <Modal {...props} size=\"lg\" centered>\r\n        <div\r\n          className=\"addBoxerModal__Header\"\r\n          onClick={onBackgroundButtonClick}\r\n          style={{ backgroundImage: `url(${backgroundImageFile})` }}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref={backgroundInputFile}\r\n            style={{ display: \"none\" }}\r\n            onChange={(event) => {\r\n              handleBackgroundPhotoClick(event);\r\n            }}\r\n          />\r\n          <Modal.Header />\r\n        </div>\r\n        <div className=\"addBoxer__Body\">\r\n          <Modal.Body>\r\n            <AddBoxerCard\r\n              onClick={onPrimaryButtonClick}\r\n              image={primaryImageFile}\r\n              name={name}\r\n              debut={debut}\r\n              retire={retire}\r\n              wins={wins}\r\n              losses={losses}\r\n              draws={draws}\r\n              handleName={handleName}\r\n              handleDebut={handleDebut}\r\n              handleRetire={handleRetire}\r\n              handleWins={handleWins}\r\n              handleLosses={handleLosses}\r\n              handleDraws={handleDraws}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              id=\"file\"\r\n              ref={primaryInputFile}\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                handlePrimaryPhotoClick(event);\r\n              }}\r\n            />\r\n            <textarea\r\n              onChange={(event) => {\r\n                setInfo(event.target.value);\r\n              }}\r\n              className=\"addBoxer__textArea\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </Modal.Body>\r\n        </div>\r\n        <Modal.Footer>\r\n          <div className=\"addBoxer__footer\">\r\n            <div className=\"addBoxer__closeButton\">\r\n              <Button onClick={handleCancel} variant=\"danger\">\r\n                Close\r\n              </Button>\r\n            </div>\r\n            <div className=\"addBoxer__SubmitButton\">\r\n              <Button\r\n                onClick={(event) => handleSubmit(event)}\r\n                variant=\"danger\"\r\n                type=\"submit\"\r\n              >\r\n                Done\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBoxer;\r\n","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\Header.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\ViewBoxer.js",["89","90","91"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./ViewBoxer.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentBoxer,\r\n  selectToEditInfo,\r\n  toggleEditInfoBar,\r\n} from \"../features/selectBoxerSlice\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport InputBar from \"./InputBar\";\r\n\r\nfunction ViewBoxer(props) {\r\n  const currentBoxerInfo = useSelector(selectCurrentBoxer);\r\n  const showEditInfo = useSelector(selectToEditInfo);\r\n  const dispatch = useDispatch();\r\n  const [infoArray, setInfoArray] = useState([]);\r\n  const [fullInfo, setFullInfo] = useState(\"\");\r\n  const [infoSubmitted, setInfoSubmitted] = useState(false);\r\n\r\n  //=================================================\r\n  // Code needed to get picture into ViewBoxer\r\n  // Don't know why it is what it is but it worked and nothing else did\r\n  if (currentBoxerInfo.imageName !== \"\") {\r\n    var imgURL = require(`../images/${currentBoxerInfo.backgroundImageName}`);\r\n  } else {\r\n    var imgURL = require(`../images/default.jpg`);\r\n  }\r\n  //=================================================\r\n\r\n  useEffect(() => {\r\n    async function handleInfoSubmit(id) {\r\n      // Send GET request to get current infomation\r\n      const response = await fetch(`http://localhost:5000/getInfo/${id}`)\r\n      const record = await response.json();\r\n      var currentInfo = record.info\r\n      setInfoArray(currentInfo.trim().split(\"\\n\"));\r\n    }\r\n    handleInfoSubmit(currentBoxerInfo._id);\r\n    setInfoSubmitted(false);\r\n  }, [currentBoxerInfo, infoSubmitted]);\r\n\r\n  const newAdded = () => {\r\n    setInfoSubmitted(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"viewBoxer__container\">\r\n      <Modal {...props} size=\"lg\" centered>\r\n        <div className=\"viewBoxer__Header\" style={{backgroundImage: \"url(\" + imgURL + \")\"}}>\r\n          <Modal.Header className=\"viewBoxer__ModalHeader\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              <div className=\"viewBoxer__titleName\">\r\n                <h1>{currentBoxerInfo.name}</h1>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n        </div>\r\n        <Modal.Body>\r\n          <div className=\"viewBoxer__modalBody\">\r\n            <div className=\"viewBoxer__data\">\r\n              <div className=\"viewBoxer__dataLeft\">\r\n                <h4>{`${currentBoxerInfo.debut}-${currentBoxerInfo.retire}`}</h4>\r\n              </div>\r\n              <div className=\"viewBoxer__dataRight\">\r\n                <h4>{`${currentBoxerInfo.wins}-${currentBoxerInfo.losses}-${currentBoxerInfo.draws}`}</h4>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"viewBoxer__info\">\r\n              <ul>\r\n                {infoArray.map((item, index) => {\r\n                  return <li>{item}</li>;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          {showEditInfo && (\r\n            <InputBar\r\n              currentInfo={currentBoxerInfo.info}\r\n              id={currentBoxerInfo._id}\r\n              newAdded={newAdded}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"viewBoxer__footer\">\r\n            <Button onClick={() => dispatch(toggleEditInfoBar())} variant=\"danger\">\r\n              Update Info\r\n            </Button>\r\n            <Button onClick={props.onHide} variant=\"danger\">\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewBoxer;\r\n","C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\searchBoxerSlice.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\selectBoxerSlice.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\features\\addBoxerSlice.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\InputBar.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\addBoxerCard.js",[],[],"C:\\Users\\murbe\\Documents\\Python\\company\\web_dev\\react\\boxing-greats\\src\\components\\BoxerCard.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":14,"column":9,"nodeType":"94","messageId":"95","endLine":14,"endColumn":15},{"ruleId":"92","severity":1,"message":"97","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":12},{"ruleId":"92","severity":1,"message":"98","line":18,"column":10,"nodeType":"94","messageId":"95","endLine":18,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":18,"column":20,"nodeType":"94","messageId":"95","endLine":18,"endColumn":31},{"ruleId":"100","severity":1,"message":"101","line":27,"column":9,"nodeType":"94","messageId":"102","endLine":27,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'params' is assigned a value but never used.","'Form' is defined but never used.","'fullInfo' is assigned a value but never used.","'setFullInfo' is assigned a value but never used.","no-redeclare","'imgURL' is already defined.","redeclared"]